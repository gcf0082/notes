调context.globalState.update函数可以保存数据到vscode的全局数据库中，保存的路径是
C:\Users\Administrator\AppData\Roaming\Code\User\globalStorage\state.vscdb

===
vscode-java 和vscode-languageclient的分析

D:\github\vscode-java-master\node_modules\vscode-languageclient\lib\common\callHierarchy.js
    provideCallHierarchyIncomingCalls(item, token) {


D:\github\vscode-java-master\node_modules\vscode-languageclient\lib\common\protocolConverter.js
    function asCallHierarchyIncomingCall(item) {
        return new code.CallHierarchyIncomingCall(asCallHierarchyItem(item.from), asRanges(item.fromRanges));
    }

这里也有callhierarchy的例子
https://github.com/jrieken/demo-callhierarchy/blob/master/src/abcLangSupport.ts

添加源代码的相关处理：
https://github.com/eclipse/eclipse.jdt.ls/blob/master/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/InvisibleProjectImporter.java
public static List<IPath> getSourcePaths(List<String> sourcePaths, IFolder workspaceLinkFolder) throws CoreException {
		if (sourcePaths == null) {
			return Collections.emptyList();
		}

		sourcePaths = sourcePaths.stream()
				.map(path -> path.trim())
				.distinct()
				.collect(Collectors.toList());

		List<IPath> sourceList = new LinkedList<>();
		for (String sourcePath : sourcePaths) {
			if (new org.eclipse.core.runtime.Path(sourcePath).isAbsolute()) {
				throw new CoreException(new Status(IStatus.ERROR, IConstants.PLUGIN_ID, "The source path must be a relative path to the workspace.")); //<<
			}
			IFolder sourceFolder = workspaceLinkFolder.getFolder(sourcePath);
			if (sourceFolder.exists()) {
				sourceList.add(sourceFolder.getFullPath());
			}
		}
		return sourceList;
	}

===
todo-tree插件分析：


A component library for building webview-based extensions in Visual Studio Code.
官方提供了webview可以用的组件
https://github.com/microsoft/vscode-webview-ui-toolkit

调试插件的步骤：
1、用vscode打开项目目录，yarn compile编译
2、点击文件行号前的空白处设置断点
3、菜单->运行->启动调试  就可以了

vscode-java插件调试的坑：
1、在launch.json文件中，增加java11的路径配置：
"env": {
  "JAVA_HOME":"D:\\software\\jdk\\jdk-17.0.4"
}

2、从已经装好vscode-java插件的中靠边sever目录到当前项目跟路径，即与dist目录同级


vscode-java插件跳转定义的相关实现：
在src\extension.ts文件中,与provideCodeActions类似重写provideDefinition的实现
middleware: {
...
provideCodeActions

而provideDefinition的实现可以在如下文件中找到
D:\github\vscode-java-master\node_modules\vscode-languageclient\lib\common\client.js
    registerLanguageProvider(options) {
        const provider = {
            provideDefinition: (document, position, token) => {
                const client = this._client;
                const provideDefinition = (document, position, token) => {
                    return client.sendRequest(vscode_languageserver_protocol_1.DefinitionRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then(client.protocol2CodeConverter.asDefinitionResult, (error) => {
                        return client.handleFailedRequest(vscode_languageserver_protocol_1.DefinitionRequest.type, token, error, null);
                    });
                };
                const middleware = client.clientOptions.middleware;
                return middleware.provideDefinition
                    ? middleware.provideDefinition(document, position, token, provideDefinition) ///<<<<<<<---这里
                    : provideDefinition(document, position, token);
            }
        };
        return [vscode_1.languages.registerDefinitionProvider(options.documentSelector, provider), provider];
    }
}

vscode-java 客户端初始化入口：
D:\github\vscode-java-master\node_modules\vscode-languageclient\lib\common\client.js
doInitialize(connection, initParams) {

vscode官方例子可以用于我的代码分析的例子：
comment-sample  --给代码加外部的注释信息
fsprovider-sample  --实现目录树
statusbar-sample  --状态栏显示相关信息
theme-sample  --主题设置
tree-view-sample --树组件使用
webview-sample  --webview

vscode插件：
https://github.com/seunlanlege/vscode-action-buttons  --状态栏增加按钮
https://github.com/tintinweb/vscode-interactive-graphviz  --可以用来参考调用链
https://github.com/microsoft/sarif-vscode-extension  --它的webview可以跟react结合

https://marketplace.visualstudio.com/items?itemName=rebornix.toggle

看板
https://marketplace.visualstudio.com/items?itemName=mkloubert.vscode-kanban

https://marketplace.visualstudio.com/items?itemName=ritwickdey.LiveServer

多剪贴板
https://marketplace.visualstudio.com/items?itemName=slevesque.vscode-multiclip

比较一个文件中两个文本的差异
https://marketplace.visualstudio.com/items?itemName=ryu1kn.partial-diff

方便查看csv文件
https://github.com/mechatroner/vscode_rainbow_csv#readme

通过ssh远程打开目录
https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.vscode-remote-extensionpack

强大的文本处理
https://marketplace.visualstudio.com/items?itemName=qcz.text-power-tools

rest客户端
https://marketplace.visualstudio.com/items?itemName=humao.rest-client

高亮output输出
https://marketplace.visualstudio.com/items?itemName=IBM.output-colorizer

可以选中高亮多个关键字
https://marketplace.visualstudio.com/items?itemName=ryu1kn.text-marker

vscode工程数据库
C:\Users\Administrator\AppData\Roaming\Code\User\workspaceStorage\51a4f02d64a257ba8c2554d3e38545ea\state.vscdb

vscode-java语言服务器相关：
后台服务端日志：
C:\Users\Administrator\AppData\Roaming\Code\User\workspaceStorage\51a4f02d64a257ba8c2554d3e38545ea\redhat.java\jdt_ws\.metadata\.log
客户端日志：
C:\Users\Administrator\AppData\Roaming\Code\User\workspaceStorage\51a4f02d64a257ba8c2554d3e38545ea\redhat.java\client.log.2022-07-24