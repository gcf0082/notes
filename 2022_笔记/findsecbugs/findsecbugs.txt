如下场景的污点可能笔记麻烦
org.apache.shiro.session.mgt.AbstractNativeSessionManager 
 protected Session createExposedSession(Session session, SessionContext context) {
    return new DelegatingSession(this, new DefaultSessionKey(session.getId()));
  }

findsecbugs插件github项目
https://github.com/mebigfatguy/fb-contrib

com.h3xstream.findsecbugs.injection.AbstractInjectionDetector#checkSink

            if (!finalTaint.isSafe()) {
                sink.addLine(line);
                sink.addLines(finalTaint.getAllLocations());
            }

获取注入函数的直接调用
com.h3xstream.findsecbugs.injection.BasicInjectionDetector#getInjectionPoint

获取类的常量池
org.apache.bcel.classfile.JavaClass#getConstantPool

获取常量的内容例子：
    public void sawOpcode(int seen) {
        if (seen == Const.INVOKESTATIC && getClassConstantOperand().equals("org/apache/velocity/app/Velocity")
                && getNameConstantOperand().equals("evaluate")) {
            OpcodeStack.Item item = stack.getStackItem(0);
            if(!StackUtils.isConstantString(item)) {
            }
        }
    }

可以在这个函数自动增加外部函数为污点
com.h3xstream.findsecbugs.taintanalysis.TaintFrameModelingVisitor#getMethodConfig

findsecbugs.bat -low  -output report.html -html D:\github\find-sec-bugs\findsecbugs-samples-java\src\test\java\testcode\command\gcf\testcode\command\gcf


findsecbugs.bat -low  -visitors ReDosDetector -output report.html -html D:\github\find-sec-bugs-version-1.12.0\findsecbugs-samples-java\target\test-classes\testcode