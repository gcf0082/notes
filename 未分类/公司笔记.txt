nm -o *显示文件名
cat /proc/cpuinfo
grep MemTotal /proc/meminfo
grep MemFree /proc/meminfo 
chkconfig --list 列所有服务
rpm -qa 软件包
lsof -i :31007 端口占用
如果文件被误删，但是进程还在打开，可以通过/proc/pid/fd下面恢复，结合lsof可以查看对应的句柄号
lsof +D /opt/xxx
notepad 长按alt再按数字，可以输入不可见字符
uniq
gprof函数调用关系
touch -t 08050102 dstamp
find . -newer dstamp -print
tar xvf gcf.tar gcf/aa.txt 解压一个文件
tar -cvf gcf.tar gcf/*.cpp 压缩cpp文件
dd if=/dev/zero of=hello.txt bs=100M count=1 100M空文件
zgrep 搜索tar.gz文本
显示文件前五个字符
head -c 5 /etc/passwd

显示文件后五个字符
tail -c 5 /etc/passwd

从文件第40行开始显示
tail -n +40 /etc/passwd

往文件追加多行
cat >> /tmp/file.txt << "EOF"
line1
line2
EOF


调试部分脚本
set -x
...
set +x

参考/etc/bash_completion.d目录下的脚本，可自定义自己的命令补齐
http://kodango.com/bash-competion-programming

ls */*/apps
vimdiff
mount -t cifs -o username=g00000 //10.66.90.53/kkkkk /mnt/gcf 挂载windows共享
cat /etc/SuSE-release
xmlwf file.xml 检查xml文件
pstree -pa 2442
cmd="mycmd";command $cmd或者exec -c
diff -q -r /opt/oss /opt/oss_bak 比较目录差异
xtail 
swatch 
chattr和lsattr 文件i属性
新建一个swap分区
dd if=/dev/zero of=/home/swap-fs bs=1M count=512
mkswap /home/swap-fs
swapon /home/swap-fs
长时间使用写入/etc/fstab文件，内容
/home/swap-fs swap swap defaults 0 0


测试是否是文本文件/opt/gcf/bin/testtxt
#!/bin/bash
FILE_PATH=$1
str=`head -c 10 "$FILE_PATH"|grep --color -o '[[:print:]]'|wc -l`
if [ $str = "10" ];then
  echo $FILE_PATH
fi

xz -d ***.tar.xz
ps axjf
sshfs
过滤重复的命令
extrace -d |grep -v /opt/gcf/temp |sh my.sh
my.sh的内容为：
#!/bin/sh
if [ $# -gt 0 ];then
exec 0<$1;
#判断是否传入参数：文件名，如果传入，将该文件绑定到标准输入
fi
while read line
do

echo "$line"|grep -sq /opt/gcf/temp

if [ $? -eq 0 ]
then
? continue
fi

str2=`echo $line | sed 's/[0-9]/0/g'|base64`
grep -sq "$str2" /opt/gcf/temp/extrace_tmp1.txt
if [ ! $? -eq 0 ]
then
  echo "$line" | tee -a /opt/gcf/temp/exec.txt
  echo "$str2" >> /opt/gcf/temp/extrace_tmp1.txt
else
  echo "$line" > /opt/gcf/temp/extrace_tmp2.txt
fi
done<&0;
#通过标准输入循环读取内容
exec 0&-;
#解除标准输入绑定


以K，M单位显示文件大小
ls -hl

ls只显示目录信息，不显示目录下的文件
ls -dl

echo不带换行的方法
echo -e "xxx\c"
或者
echo -n "xxx"

echo "ABCddd"|tr A-Z a-z
设置获取全局变量
org.zaproxy.zap.extension.script.ScriptVars.setGlobalVar("gcf", "xx2");
org.zaproxy.zap.extension.script.ScriptVars.getGlobalVar

function sendingRequest(msg, initiator, helper) {
// Debugging can be done using println like this
//println(msg.getRequestHeader().getURI().toString());
var HttpMessage = Java.type("org.parosproxy.paros.network.HttpMessage");
var URI = Java.type("org.apache.commons.httpclient.URI");
msg2 = msg.cloneAll();
msg2.setRequestBody("yyyy");
uri = new URI("http://10.67.252.200/yyy");
msg3 = new HttpMessage(uri);
//org.parosproxy.paros.network.HttpMessage msg3 = null;

helper.getHttpSender().sendAndReceive(msg3, false);
}

Stand alone脚本需要手工点击Run按钮

可以拷贝只剪贴板
string += "'"+msg.getRequestHeader().getURI().toString()+"'";
selected = new java.awt.datatransfer.StringSelection(string);
clipboard = java.awt.Toolkit.getDefaultToolkit().getSystemClipboard();
clipboard.setContents(selected,null);

实现了Tab接口就有类似断点一样的页签
public class BreakPanel extends AbstractPanel implements Tab

打开url
org.zaproxy.zap.utils.DesktopUtils.openUrlInBrowser(
"http://www.cvedetails.com/google-search-results.php?q=" + encodeURIComponent(header) + 
"&sa=Search");
}

脚本弹框方法
org.parosproxy.paros.view.View.getSingleton().showMessageDialog("xxx")

Output框添加内容
org.parosproxy.paros.view.View.getSingleton().getOutputPanel().append(contents)

插件名字格式要求，例子：
simple-release-1.zap

zap底层发送请求的函数
org.parosproxy.paros.network.HttpSender.runMethod(HttpMessage, boolean)


proxy发送请求回调接口
org.parosproxy.paros.core.proxy.ConnectRequestProxyListener.receivedConnectRequest


zap自带的插件在
org.zaproxy.zap.extension 包下和plugin目录下

通过如下接口可获取指定的插件实例
org.parosproxy.paros.control.Control.getSingleton().getExtensionLoader().getExtension("ExtensionHistory")

org.zaproxy.zap.ZAP.main
org.zaproxy.zap.ZAP.runCommandLine
org.parosproxy.paros.control.Control.initSingletonWithoutView
org.parosproxy.paros.control.Control.init
org.parosproxy.paros.control.Proxy.startServer
org.parosproxy.paros.core.proxy.ProxyServer.startServer
org.parosproxy.paros.core.proxy.ProxyServer.run
org.parosproxy.paros.core.proxy.ProxyThread.start

readelf -s /bin/ls|grep __stack_chk_fail
readelf -s /bin/ls|grep GNU_STACK|grep GWE

jdb
打印请求头
print request.getHeaderNames().this$0._names

jdb打印所有的头
print context.getHttpServletRequest().request.request.facade.request.getHeaderNames().headers
print context.getHttpServletRequest().getHeaderNames().val$buffers.val$c

与密码相关的对话框
find ./ -name "*.html" -o -name "*.jsp" -o -name "*.usl"|xargs grep "type=\"password\""

获取文件类型
find -type f|awk -F/ '{print $NF}'|awk -F. '{print $NF}'|sort -u

搜索文件后按大小排序
find -name "*.as"|xargs -i ls -l {}|sort +4n

过滤所有的请求参数，已将时间屏蔽
tail -f ./netmatrix/Bus/nginx/access_er.log|sed 's/_=[0-9]\{13\}//g'|grep -v isActived|awk -F? '{print $2}'|grep -v "HTTP/1.1"|grep -v "^ "|awk -F"\"" '{print $1}'|grep -v "^ "

自动增加启动参数
find /opt/oss/ -name start.sh|xargs sed -i '/JVM_OPT=\"\$AGENT_ARG\"/a. /opt/gcf/netmatris/byteman/profile #added by gechengfeng'

获取程序可能处理的后缀名
find ../icto_just/ -name "*.java"|xargs grep -P --color -h '"\.([a-z]{3}|html|docx|xlsx)"'

过滤重复的数字，比如pid
cat /opt/gcf/temp/exec.txt|awk -F% '{print $2}'|sed 's/[0-9]/0/g'|sort -u|more

搜索所有处理文件后缀名的地方：
find -name "*.java"|xargs grep -P -o '\"\.[a-z]{2,4}\"'

搜索工号命令
oss find code *.js,*.jsp,*.html|xargs grep '[a-z][0-9]\{8\}'|cut -c-200 > /opt/gcf/temp.txt
oss find code *.js,*.jsp|xargs grep '[a-z]\{4,20\} [0-9]\{5,8\}' >> /opt/gcf/temp.txt

替换xshell中的ip
perl -p -i -e 's/(?<=Host=10.145.212.)\d{2,3}/78/g' 77.xsh

全盘搜索系统有s标志的文件（普通用户可以以root权限执行的命令）
find / -perm -4000 -type f

自动格式化javascript文件
node node_modules/js-beautify/js/bin/js-beautify.js -r /opt/gcf/temp/fileupload.js
https://www.npmjs.com/package/js-beautify

反编译python
uncompyle2 -o ./ --py /opt/gcf/temp/MaintainRedis.pyc

删除重复文件
fdupes -r -n -I -d ./

fatrace--监控文件是被那个进程打开的（貌似低版本不能用）
https://launchpad.net/fatrace/+download

压缩文件路径带../../
tar --absolute-names -cvf gcf.tar "/tmp/GaussInstallTmp/../../etc/shadow_gcf"

搜索调用doGet的代码
find -name "*.java"|xargs grep -P '^[\s]*doGet\('

利用tcpdump抓包sql语句
#!/bin/bash
#this script used montor mysql network traffic.echo sql
tcpdump -i eth0 -s 0 -l -w - dst port 3306 | strings | perl -e '
while(<>) { chomp; next if /^[^ ]+[ ]*$/;
 if(/^(SELECT|UPDATE|DELETE|INSERT|SET|COMMIT|ROLLBACK|CREATE|DROP|ALTER|CALL)/i)
 {
 if (defined $q) { print "$q\n"; }
 $q=$_;
 } else {
 $_ =~ s/^[ \t]+//; $q.=" $_";
 }
}'

查找列表包含username的表
SELECT table_name FROM information_schema.columns WHERE column_name = 'username';
SELECT table_name FROM information_schema.columns WHERE column_name = 'password';

 chrome.exe --remote-debugging-port=9222 --user-data-dir=remote-profile。远程会话必须使用不同的 Chrome 实例，所以运行时要加 --user-data-dir 参数。

端口转发（可windows使用）
socat tcp-listen:5656,fork tcp:localhost:1337

socat windows版本
https://github.com/StudioEtrange/socat-windows